{
    "random_exploration": 0.2,
    "learning_starts": 100,
    "action_space": {
        "np_random": "RandomState(MT19937)",
        "dtype": "float32",
        ":type:": "<class 'gym.spaces.box.Box'>",
        "low": "[-1. -1. -1. -1. -1. -1.]",
        "high": "[1. 1. 1. 1. 1. 1.]",
        ":serialized:": "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",
        "shape": [
            6
        ]
    },
    "batch_size": 256,
    "n_sampled_goal": 4,
    "target_policy_noise": 0.2,
    "gamma": 0.99,
    "_vectorize_action": false,
    "goal_selection_strategy": {
        "__objclass__": "<enum 'GoalSelectionStrategy'>",
        "_value_": 0,
        "_name_": "FUTURE",
        ":serialized:": "gASVRgAAAAAAAACMInN0YWJsZV9iYXNlbGluZXMuaGVyLnJlcGxheV9idWZmZXKUjBVHb2FsU2VsZWN0aW9uU3RyYXRlZ3mUk5RLAIWUUpQu",
        ":type:": "<enum 'GoalSelectionStrategy'>"
    },
    "buffer_size": 1000000,
    "policy": {
        "__init__": "<function CustomTD3Policy.__init__ at 0x7f17dfdd9158>",
        "__doc__": null,
        "_abc_registry": "<_weakrefset.WeakSet object at 0x7f17dfdc1ef0>",
        ":type:": "<class 'abc.ABCMeta'>",
        "_abc_negative_cache": "<_weakrefset.WeakSet object at 0x7f17dfdcb4e0>",
        "_abc_cache": "<_weakrefset.WeakSet object at 0x7f17dfdd82e8>",
        "_abc_negative_cache_version": 53,
        "__module__": "__main__",
        "__abstractmethods__": "frozenset()",
        ":serialized:": "gASVGwQAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwZX3JlaHlkcmF0ZV9za2VsZXRvbl9jbGFzc5STlChoAIwUX21ha2Vfc2tlbGV0b25fY2xhc3OUk5QojANhYmOUjAdBQkNNZXRhlJOUjA9DdXN0b21URDNQb2xpY3mUjB1zdGFibGVfYmFzZWxpbmVzLnRkMy5wb2xpY2llc5SMEUZlZWRGb3J3YXJkUG9saWN5lJOUhZR9lIwHX19kb2NfX5ROc4wgYmVhZGFkMTM1MTllNDI2NWEzYjJhYjYyYjY4MzJlMmGUTnSUUpR9lCiMCF9faW5pdF9flGgAjA5fZmlsbF9mdW5jdGlvbpSTlChoAIwPX21ha2Vfc2tlbF9mdW5jlJOUaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsDSwtLD0NHdAAAdAEAfAAAgwIAagIAfAEAfAIAZAEAZAIAZAIAZwIAZAMAZAQAZAUAdAMAagQAagUAZAYAZAcAaQQAlwICjgAAAWQAAFOUKE6MBmxheWVyc5RLQIwKbGF5ZXJfbm9ybZSJjAdhY3RfZnVulIwSZmVhdHVyZV9leHRyYWN0aW9ulIwFbG5tbHCUdJQojAVzdXBlcpSMD0N1c3RvbVREM1BvbGljeZRoE4wCdGaUjAJubpSMBHJlbHWUdJSMBHNlbGaUjARhcmdzlIwGa3dhcmdzlIeUjAh0cmFpbi5weZSMCF9faW5pdF9flEsZQwoAARgBDAEGAQwBlIwJX19jbGFzc19flIWUKXSUUpRLAX2UKIwLX19wYWNrYWdlX1+UTowIX19uYW1lX1+UjAhfX21haW5fX5SMCF9fZmlsZV9flIwIdHJhaW4ucHmUdYeUUpR9lCiMBm1vZHVsZZRoOIwEZGljdJR9lIwDZG9jlE6MDmNsb3N1cmVfdmFsdWVzlF2UaBFhjAdnbG9iYWxzlH2UKGglaBFoJowqdGVuc29yZmxvdy5weXRob24udXRpbC5kZXByZWNhdGlvbl93cmFwcGVylIwSRGVwcmVjYXRpb25XcmFwcGVylJOUKYGUjAp0ZW5zb3JmbG93lGJ1jAhxdWFsbmFtZZSMGEN1c3RvbVREM1BvbGljeS5fX2luaXRfX5SMF19jbG91ZHBpY2tsZV9zdWJtb2R1bGVzlF2UjAhkZWZhdWx0c5ROjARuYW1llGgvjAprd2RlZmF1bHRzlE51dFKMDV9hYmNfcmVnaXN0cnmUjAtfd2Vha3JlZnNldJSMB1dlYWtTZXSUk5RdlIWUUowTX2FiY19uZWdhdGl2ZV9jYWNoZZRoVV2UhZRSjApfYWJjX2NhY2hllGhVXZSFlFKMCl9fbW9kdWxlX1+UaDh1dFIu"
    },
    "verbose": 1,
    "learning_rate": {
        ":serialized:": "gASVFwIAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX2ZpbGxfZnVuY3Rpb26Uk5QoaACMD19tYWtlX3NrZWxfZnVuY5STlGgAjA1fYnVpbHRpbl90eXBllJOUjAhDb2RlVHlwZZSFlFKUKEsBSwBLAUsBSxNDBIgAAFOUToWUKYwBX5SFlIxjL2hvbWUvYmlvbG9pZC9EZXNrdG9wL1J1c2NvbmkvdmVfcHlidWxsZXQvbGliL3B5dGhvbjMuNS9zaXRlLXBhY2thZ2VzL3N0YWJsZV9iYXNlbGluZXMvcHBvMi9wcG8yLnB5lIwEZnVuY5RNJQJDAgABlIwDdmFslIWUKXSUUpRLAX2UKIwLX19wYWNrYWdlX1+UjBVzdGFibGVfYmFzZWxpbmVzLnBwbzKUjAhfX25hbWVfX5SMGnN0YWJsZV9iYXNlbGluZXMucHBvMi5wcG8ylIwIX19maWxlX1+UaA51h5RSlH2UKIwGbW9kdWxllGgZjARkaWN0lH2UjANkb2OUTowOY2xvc3VyZV92YWx1ZXOUXZRHPzOpKjBVMmFhjAdnbG9iYWxzlH2UjAhxdWFsbmFtZZSMFWNvbnN0Zm4uPGxvY2Fscz4uZnVuY5SMF19jbG91ZHBpY2tsZV9zdWJtb2R1bGVzlF2UjAhkZWZhdWx0c5ROjARuYW1llGgPjAprd2RlZmF1bHRzlE51dFIu",
        ":type:": "<class 'function'>"
    },
    "model_class": {
        "predict": "<function TD3.predict at 0x7f180d9a0620>",
        "__doc__": "\n    Twin Delayed DDPG (TD3)\n    Addressing Function Approximation Error in Actor-Critic Methods.\n\n    Original implementation: https://github.com/sfujim/TD3\n    Paper: https://arxiv.org/pdf/1802.09477.pdf\n    Introduction to TD3: https://spinningup.openai.com/en/latest/algorithms/td3.html\n\n    :param policy: (TD3Policy or str) The policy model to use (MlpPolicy, CnnPolicy, LnMlpPolicy, ...)\n    :param env: (Gym environment or str) The environment to learn from (if registered in Gym, can be str)\n    :param gamma: (float) the discount factor\n    :param learning_rate: (float or callable) learning rate for adam optimizer,\n        the same learning rate will be used for all networks (Q-Values and Actor networks)\n        it can be a function of the current progress (from 1 to 0)\n    :param buffer_size: (int) size of the replay buffer\n    :param batch_size: (int) Minibatch size for each gradient update\n    :param tau: (float) the soft update coefficient (\"polyak update\" of the target networks, between 0 and 1)\n    :param policy_delay: (int) Policy and target networks will only be updated once every policy_delay steps\n        per training steps. The Q values will be updated policy_delay more often (update every training step).\n    :param action_noise: (ActionNoise) the action noise type. Cf DDPG for the different action noise type.\n    :param target_policy_noise: (float) Standard deviation of gaussian noise added to target policy\n        (smoothing noise)\n    :param target_noise_clip: (float) Limit for absolute value of target policy smoothing noise.\n    :param train_freq: (int) Update the model every `train_freq` steps.\n    :param learning_starts: (int) how many steps of the model to collect transitions for before learning starts\n    :param gradient_steps: (int) How many gradient update after each step\n    :param random_exploration: (float) Probability of taking a random action (as in an epsilon-greedy strategy)\n        This is not needed for TD3 normally but can help exploring when using HER + TD3.\n        This hack was present in the original OpenAI Baselines repo (DDPG + HER)\n    :param verbose: (int) the verbosity level: 0 none, 1 training information, 2 tensorflow debug\n    :param tensorboard_log: (str) the log location for tensorboard (if None, no logging)\n    :param _init_setup_model: (bool) Whether or not to build the network at the creation of the instance\n    :param policy_kwargs: (dict) additional arguments to be passed to the policy on creation\n    :param full_tensorboard_log: (bool) enable additional logging when using tensorboard\n        Note: this has no effect on TD3 logging for now\n    ",
        "_abc_negative_cache_version": 53,
        "_abc_negative_cache": "<_weakrefset.WeakSet object at 0x7f180d9faf60>",
        "setup_model": "<function TD3.setup_model at 0x7f180d9a0400>",
        "get_parameter_list": "<function TD3.get_parameter_list at 0x7f180d9a06a8>",
        ":type:": "<class 'abc.ABCMeta'>",
        "__module__": "stable_baselines.td3.td3",
        "_train_step": "<function TD3._train_step at 0x7f180d9a0488>",
        ":serialized:": "gASVJAAAAAAAAACMGHN0YWJsZV9iYXNlbGluZXMudGQzLnRkM5SMA1REM5STlC4=",
        "_abc_cache": "<_weakrefset.WeakSet object at 0x7f180d9faeb8>",
        "__init__": "<function TD3.__init__ at 0x7f180d9ff950>",
        "_get_pretrain_placeholders": "<function TD3._get_pretrain_placeholders at 0x7f180d9a0378>",
        "action_probability": "<function TD3.action_probability at 0x7f180d9a0598>",
        "_abc_registry": "<_weakrefset.WeakSet object at 0x7f180d9fae48>",
        "learn": "<function TD3.learn at 0x7f180d9a0510>",
        "__abstractmethods__": "frozenset()",
        "save": "<function TD3.save at 0x7f180d9a0730>"
    },
    "her_action_space": {
        "np_random": "RandomState(MT19937)",
        "dtype": "float32",
        ":type:": "<class 'gym.spaces.box.Box'>",
        "low": "[-1. -1. -1. -1. -1. -1.]",
        "high": "[1. 1. 1. 1. 1. 1.]",
        ":serialized:": "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",
        "shape": [
            6
        ]
    },
    "observation_space": {
        "np_random": "RandomState(MT19937)",
        "dtype": "float32",
        ":type:": "<class 'gym.spaces.box.Box'>",
        "low": "[-100. -100. -100. -100. -100. -100. -100. -100. -100. -100. -100. -100.\n -100. -100. -100. -100. -100. -100. -100. -100. -100. -100. -100. -100.]",
        "high": "[100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100. 100.\n 100. 100. 100. 100. 100. 100. 100. 100. 100. 100.]",
        ":serialized:": "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",
        "shape": [
            24
        ]
    },
    "her_obs_space": {
        "np_random": null,
        "spaces": "OrderedDict([('achieved_goal', Box(6,)), ('desired_goal', Box(6,)), ('observation', Box(12,))])",
        "dtype": null,
        ":type:": "<class 'gym.spaces.dict.Dict'>",
        "shape": null,
        ":serialized:": ""
    },
    "n_envs": 1,
    "train_freq": 100,
    "action_noise": {
        "_mu": "[0. 0. 0. 0. 0. 0.]",
        "_dt": 0.01,
        "initial_noise": null,
        "_sigma": "[0.5 0.5 0.5 0.5 0.5 0.5]",
        ":type:": "<class 'stable_baselines.common.noise.OrnsteinUhlenbeckActionNoise'>",
        "noise_prev": "[ 0.62565533  0.38222209  0.44041487  0.29924578 -0.11672913 -1.14077039]",
        "_theta": 0.15,
        ":serialized:": "gASV8wEAAAAAAACMHXN0YWJsZV9iYXNlbGluZXMuY29tbW9uLm5vaXNllIwcT3Juc3RlaW5VaGxlbmJlY2tBY3Rpb25Ob2lzZZSTlCmBlH2UKIwDX211lIwVbnVtcHkuY29yZS5tdWx0aWFycmF5lIwMX3JlY29uc3RydWN0lJOUjAVudW1weZSMB25kYXJyYXmUk5RLAIWUQwFilIeUUpQoSwFLBoWUjAVudW1weZSMBWR0eXBllJOUjAJmOJRLAEsBh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKJQzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUdJRijANfZHSURz+EeuFHrhR7jAZfdGhldGGURz/DMzMzMzMzjApub2lzZV9wcmV2lGgIaAtLAIWUaA2HlFKUKEsBSwaFlGgWiUMwLM9lVF4F5D+FgqWgU3bYP8hm6trBL9w/Y3XZxdcm0z/Rjd/B9eG9vx/pf3SYQPK/lHSUYowGX3NpZ21hlGgIaAtLAIWUaA2HlFKUKEsBSwaFlGgWiUMwAAAAAAAA4D8AAAAAAADgPwAAAAAAAOA/AAAAAAAA4D8AAAAAAADgPwAAAAAAAOA/lHSUYowNaW5pdGlhbF9ub2lzZZROdWIu"
    },
    "tau": 0.005,
    "target_noise_clip": 0.5,
    "policy_kwargs": {},
    "policy_delay": 2
}